#include <stdio.h>

// 두 개의 정렬된 배열을 합치는 함수
void merge(int arr[], int left[], int leftSize, int right[], int rightSize) {
    int i = 0, j = 0, k = 0;
    
    while (i < leftSize && j < rightSize) {
        if (left[i] <= right[j]) {
            arr[k] = left[i];
            i++;
        } else {
            arr[k] = right[j];
            j++;
        }
        k++;
    }
    
    while (i < leftSize) {
        arr[k] = left[i];
        i++;
        k++;
    }
    
    while (j < rightSize) {
        arr[k] = right[j];
        j++;
        k++;
    }
}

// 합병 정렬 함수
void mergeSort(int arr[], int size) {
    if (size <= 1) {
        return;
    }
    
    int mid = size / 2;
    int left[mid];
    int right[size - mid];
    
    for (int i = 0; i < mid; i++) {
        left[i] = arr[i];
    }
    
    for (int i = mid; i < size; i++) {
        right[i - mid] = arr[i];
    }
    
    mergeSort(left, mid);
    mergeSort(right, size - mid);
    
    merge(arr, left, mid, right, size - mid);
}

int main() {
    int arr[] = {5, 2, 8, 6, 1, 9, 3, 7, 4};
    int size = sizeof(arr) / sizeof(arr[0]);
    
    printf("정렬 이전: ");
    for (int i = 0; i < size; i++) {
        printf("%d ", arr[i]);
    }
    
    mergeSort(arr, size);
    
    printf("\n정렬 이후: ");
    for (int i = 0; i < size; i++) {
        printf("%d ", arr[i]);
    }
    
    return 0;
}
